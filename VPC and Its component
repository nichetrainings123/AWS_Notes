1. VPC — what it really is

Definition: A VPC (Virtual Private Cloud) is an AWS-managed, logically isolated virtual network where you launch AWS resources (EC2, RDS, ECS tasks, etc.). It behaves like your own on-premise network but within an AWS region.

Key properties: CIDR block (e.g., 10.0.0.0/16), spans all AZs in the region (resources live in specific AZs), contains subnets, route tables, security controls.

Best practices: Use separate VPCs for major isolation boundaries (prod / staging / dev) or use AWS Organizations + separate accounts for stronger isolation; limit number of IPs to what you need; design for multi-AZ.

2. CIDR — addressing & sizing

CIDR format: IP/prefix e.g. 10.0.0.0/16. The prefix defines how many addresses:

/16 → 2^(32-16)=65,536 addresses (10.0.0.0–10.0.255.255).

/24 → 256 addresses (10.0.1.0–10.0.1.255).

AWS detail: AWS reserves 5 IPs in each subnet (first 4 and last 1) — those are unusable.

Design tip: Avoid overly-large address blocks if you don’t need them (helps avoid collisions with on-prem networks when using VPN/Direct Connect). Plan non-overlapping ranges if you expect peering/VPN/DirectConnect.

3. Subnets — AZ-level slices

Each subnet is tied to a single AZ (e.g., us-east-1a).

Public subnet: subnet with a route to an Internet Gateway (IGW) and instances typically have public IPs or Elastic IPs.

Private subnet: no route to IGW. Instances use a NAT (gateway/instance) to make outbound connections while preventing inbound internet initated connections.

Example mapping: VPC 10.0.0.0/16 → public 10.0.1.0/24 (AZ-A), private 10.0.2.0/24 (AZ-A). For HA, create the same subnets in each AZ.

4. Internet Gateway (IGW)

Purpose: Connects your VPC to the public internet. It’s horizontally scaled, redundant, and free (you do not pay for IGW itself).

Behavior: To let an instance in a subnet talk to the internet you need:

A route in the subnet’s route table: 0.0.0.0/0 -> igw-...

Instance with a public IP or Elastic IP.

Security group/NACL rules allowing the traffic.

Limit: One IGW per VPC.

5. NAT — making private instances reach the internet

NAT Gateway (recommended): Managed, highly available in a single AZ, requires an Elastic IP, charged per hour + data processed. For multi-AZ fault tolerance, create NAT Gateways in each AZ and route each AZ’s private subnets to their AZ’s NAT GW.

NAT Instance: You run an EC2 as NAT — needs maintenance, scaling and HA management. Not recommended unless you need custom behavior.

6. Route Tables — how traffic is routed

What it holds: Rules mapping destination CIDRs to targets (local, IGW, NAT, peering, VPC endpoint, VGW, Transit Gateway).

Associations: Each subnet is associated with exactly one route table (explicit or default). A route table can be associated with many subnets.

Common entries:

10.0.0.0/16 -> local (auto)

0.0.0.0/0 -> igw-... (public subnet RT)

0.0.0.0/0 -> nat-... (private subnet RT)

7. Security Group (SG) — instance-level firewall

Stateful: If you allow inbound traffic, return traffic is automatically allowed even if not explicitly allowed in the outbound rules.

Only allow rules: Security groups are allow-lists only; there are no deny rules.

Attach to ENI/instance: Can be changed dynamically without restarting instance.

Example: Web SG — inbound allow TCP 80/443 from 0.0.0.0/0; inbound SSH should be locked to office IPs or disabled. Outbound commonly open except for hardened environments.

8. Network ACL (NACL) — subnet-level firewall

Stateless: Must add both inbound and outbound allow entries for return traffic (or else traffic is blocked).

Rules are evaluated by number (lowest first) and can explicitly deny or allow.

Use cases: Extra edge protection, deny known-bad IP ranges, temporary protection. Many teams use default NACLs and rely on SGs; use NACLs sparingly to avoid complexity.

9. Point-to-Point (P2P) connectivity

VPC Peering: Connects two VPCs (same or different accounts, cross-region also possible). Not transitive — A peered VPC will not forward traffic to a third VPC. Good for simple 1:1 connections.

Direct Connect: Dedicated physical connection from on-prem to AWS. Lower latency, predictable bandwidth, billed by port + data; commonly paired with a Virtual Private Gateway (VGW) or Transit Gateway.

Transit Gateway: For managing many VPCs at scale — supports transitive routing and simplifies large networks compared to many peering links.

10. Point-to-Site (P2S) — client VPN

AWS Client VPN: Secure, managed VPN allowing individual clients (laptops) to connect to the VPC. Useful for devs/admins who need private access without public IPs or bastion.

Alternatives: OpenVPN servers, self-managed VPN appliances.

11. Load Balancers (ELB family)

Application Load Balancer (ALB): Layer 7 (HTTP/HTTPS). Supports host-based & path-based routing, WebSockets, HTTP/2, and advanced routing rules (listener rules). Good for microservices or web apps.

Network Load Balancer (NLB): Layer 4 (TCP/UDP). Extremely high throughput and low latency, preserves client IP, supports TLS offload as of recent features. Good for high-concurrency or non-HTTP workloads.

Classic Load Balancer (CLB): Legacy — use only for legacy use cases.

Placement: ALBs/NLBs are deployed into subnets in multiple AZs. Target groups point to instances, IPs, or lambdas (for ALB/ALB target types).

Traffic flow (walkthrough of your ASCII diagram)

Client → Internet → IGW: A client’s request for example.com goes to the ALB or public EC2 public IP. DNS resolves to the ALB public IP; traffic reaches the IGW attached to the VPC.

IGW → Public Subnet Route Table → EC2 (Web): Public route table has 0.0.0.0/0 -> IGW. The EC2 instance in the public subnet must have a public IP/Elastic IP and a security group that allows inbound 80/443.

Web Server → Private DB: The web server in the public subnet connects to the DB in the private subnet via its private IP — traffic stays inside the VPC (route local).

DB Outbound to Internet (for updates): DB in private subnet needs outbound access to download updates — route table points 0.0.0.0/0 -> NAT Gateway in the public subnet. The NAT gateway performs source NAT with its Elastic IP; return traffic flow goes back.

High availability: To avoid AZ failures, you should create public/private subnets and NAT gateways in every AZ you use and configure the ALB/instances in multi-AZ groups.

Important gotchas & practical tips

Avoid overlapping CIDRs if you plan VPN/peering/DirectConnect — overlapping addresses will block routing.

NAT Gateway costs: NAT GW is convenient but can be expensive at scale (hourly + per-GB). For heavy egress, consider VPC endpoints (S3, DynamoDB) and Direct Connect, or shared NAT with careful design.

Security groups vs NACLs: Prefer security groups for fine-grained access; use NACLs for simple subnet-level filtering or emergency blocks. Remember SGs are stateful; NACLs stateless.

Peering is not transitive: For many VPCs, use Transit Gateway.

Use VPC endpoints (PrivateLink / Gateway endpoints): To connect to AWS services (S3, DynamoDB) without going over the internet — improves security and lowers data egress cost.

Bastion / SSM: Avoid exposing SSH publicly; use AWS Systems Manager Session Manager (SSM) or a hardened bastion host in a public subnet and restrict access with SGs.

Route table priority & associations: Subnet uses the most specific associated route table; keep route tables simple and document associations.

Monitoring: Enable VPC Flow Logs for auditing and troubleshooting connectivity. Use CloudWatch/CloudTrail to monitor config changes.

Example checklist when building this VPC for a web app

Choose VPC CIDR — e.g., 10.10.0.0/16.

Create subnets per AZ:

10.10.1.0/24 public AZ-A

10.10.2.0/24 private AZ-A

10.10.11.0/24 public AZ-B

10.10.12.0/24 private AZ-B

Create IGW and attach to VPC.

Create NAT Gateway(s) in each public subnet and allocate Elastic IPs.

Create route tables:

Public RT: 0.0.0.0/0 -> IGW.

Private RT: 0.0.0.0/0 -> NAT GW (AZ-specific).

Security groups:

ALB SG: allow 80/443 from internet.

Web SG: allow 80 from ALB SG; allow 22 from admin IP (or SSM only).

DB SG: allow DB port only from Web SG.

Create ALB across AZs, register web instances in ASG.

Add VPC endpoints for S3 and DynamoDB if app uses them heavily.

Enable Flow Logs for the VPC.

Test traffic flows and failover across AZs.

Short glossary

ENI: Elastic Network Interface — virtual NIC attached to EC2.

EIP: Elastic IP — public static IP you can attach to an instance or NAT gateway.

VGW: Virtual Private Gateway — used by VPN/Direct Connect.

Transit Gateway: Hub-and-spoke network hub for many VPCs/VPNs.
